<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/task
                           http://www.springframework.org/schema/task/spring-task.xsd">


    <context:component-scan base-package="com.payway"/>

    <!-- Контекст Hazelcast'а -->
    <import resource="hazelcast-server-context.xml"/>

    <!-- Обработчик отказов для TaskExecutor'а -->
    <bean id="app.RejectPolicy" class = "com.payway.server.messaging.RejectExecutionPolicy"/>

    <!--
        TaskExecutor для обработки серверных задач.
        Один поток выделяется для получения входящих сообщений.
        Другие потоки - обработка сообщений.
    -->
    <bean id="app.ServerTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="25" />
        <property name="queueCapacity" value="5" />
        <property name="rejectedExecutionHandler" ref="app.RejectPolicy"/>
    </bean>

    <!-- Обработчик получения запросов -->
    <bean id="app.MessageServerListener" class="com.payway.server.messaging.MessageServerRequestListener">
        <property name="serverTaskExecutor" ref="app.ServerTaskExecutor" />
        <property name="serverQueue" ref="serverQueue" />
    </bean>

    <!-- Обработчик входящих запросов -->
    <bean id="app.MessageServerRequestHandler" class="com.payway.server.messaging.MessageServerRequestHandler" scope="prototype">

        <property name="dosService" ref="app.DosService" />
        <property name="timeOut" value="20"/>
        <property name="timeUnit">
            <value type="java.util.concurrent.TimeUnit">SECONDS</value>
        </property>
    </bean>

</beans>